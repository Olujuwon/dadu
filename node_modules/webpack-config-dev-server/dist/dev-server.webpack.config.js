'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _webpackPartial = require('webpack-partial');

var _webpackUdevServer = require('webpack-udev-server');

exports.default = function () {
  return function (config) {
    var entry = config.entry;
    var target = config.target;
    var _config$plugins = config.plugins;
    var plugins = _config$plugins === undefined ? [] : _config$plugins;

    // Detect whether or not HMR is enabled to enable hot on the dev server.
    // NOTE: This means devServer has to come _after_ hot is configured.
    // TODO: Checking constructor name might be a little brittle.

    var hot = plugins.some(function (plugin) {
      return plugin.constructor.name === 'HotModuleReplacementPlugin';
    });

    // Rewrite all the entry points to include HMR code.
    return (0, _webpackPartial.partial)(config, {
      entry: (0, _webpackPartial.inject)(entry, (0, _webpackUdevServer.runtime)({ target: target, hot: hot }))
    });
  };
};
//# sourceMappingURL=dev-server.webpack.config.js.map