{"version":3,"sources":["lib/loader.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;kBAEe,qBAAM,UAAC,MAAD,EAAS,MAAT,EAAoB;AACvC,MAAM,UAAU,OAAO,MAAP,IAAiB,OAAO,MAAP,CAAc,OAA/B,GACd,OAAO,MAAP,CAAc,OAAd,CAAsB,KAAtB,EADc,GACkB,EADlC;;AAGA,MAAI,OAAO,IAAX,EAAiB;AACf,QAAM,QAAQ,yBAAU,OAAV,EAAmB,EAAC,MAAM,OAAO,IAAd,EAAnB,CAAd;AACA,QAAI,UAAU,CAAC,CAAf,EAAkB;AAChB,cAAQ,IAAR,CAAa,MAAb;AACD,KAFD,MAEO;AACL,cAAQ,KAAR,iBACK,QAAQ,KAAR,CADL,EAEK,MAFL;AAID;AACF,GAVD,MAUO;AACL,YAAQ,IAAR,CAAa,MAAb;AACD;;AAED,sBACK,MADL;AAEE,yBACM,OAAO,MAAP,GAAgB,OAAO,MAAvB,GAAgC,EADtC;AAEE;AAFF;AAFF;AAOD,CAzBc,C","file":"loader.js","sourcesContent":["import curry from 'lodash/curry';\nimport findIndex from 'lodash/findIndex';\n\nexport default curry((loader, config) => {\n  const loaders = config.module && config.module.loaders ?\n    config.module.loaders.slice() : [];\n\n  if (loader.name) {\n    const index = findIndex(loaders, {name: loader.name});\n    if (index === -1) {\n      loaders.push(loader);\n    } else {\n      loaders[index] = {\n        ...loaders[index],\n        ...loader,\n      };\n    }\n  } else {\n    loaders.push(loader);\n  }\n\n  return {\n    ...config,\n    module: {\n      ...(config.module ? config.module : {}),\n      loaders,\n    },\n  };\n});\n"]}